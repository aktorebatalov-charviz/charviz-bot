# –û—Å–Ω–æ–≤–Ω–æ–π –≤–µ–±—Ö—É–∫ ‚Äî –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–∏–≥–Ω–∞–ª —Å TradingView
@app.post("/webhook")
async def webhook(request: Request):
    try:
        data = await request.json()
        print("=== RECEIVED WEBHOOK ===")   # üëà –î–æ–±–∞–≤–ª–µ–Ω–æ
        print(data)                        # üëà –î–æ–±–∞–≤–ª–µ–Ω–æ
    except:
        raise HTTPException(400, "Invalid JSON")

    direction  = data.get("direction", "NONE")
    symbol     = data.get("symbol", "UNKNOWN")
    confidence = float(data.get("confidence", 0))
    expiry     = int(data.get("expiry_minutes", 5))

    # –ï—Å–ª–∏ —Å–∏–≥–Ω–∞–ª —Å–ª–∞–±—ã–π ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
    if direction == "NONE" or confidence < 0.97:
        await send_tg("—Å–ª–µ–¥—É—é—â–∞—è", buttons=False)
        return {"ok": True, "skipped": True}

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–∏–≥–Ω–∞–ª
    global LAST_SIGNAL
    LAST_SIGNAL = {
        "symbol": symbol,
        "direction": direction,
        "confidence": confidence,
        "expiry": expiry,
        "stake": BASE_STAKE,
        "ts": time.time(),
        "approved_at": None,
        "skipped_at": None,
    }

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–∏–≥–Ω–∞–ª –≤ Telegram
    text = f"{direction} 5M ({int(confidence*100)}%) ‚Äî {symbol}\n–í—Ö–æ–¥ —á–µ—Ä–µ–∑: {ENTRY_DELAY} —Å–µ–∫\n–°—Ç–∞–≤–∫–∞: {BASE_STAKE} ‚Ç∏"
    await send_tg(text, buttons=True)
    return {"ok": True, "sent": True}
